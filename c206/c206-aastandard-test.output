Dvousmìrnì vázaný lineární seznam
=================================

[TEST01]
Inicializace seznamu
~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------

[TEST02]
Zavoláme 2x operaci DLInsertFirst a 2x operaci DLInsertLast.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
-----------------
-----------------
 	2
 	1
-----------------
-----------------
 	2
 	1
 	3
-----------------
-----------------
 	2
 	1
 	3
 	4
-----------------

[TEST03]
Otestujeme funkci DLFirst pøi neaktivním seznamu a funkci DLActive.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	2	 <= toto je aktivní prvek 
 	1
 	3
 	4
-----------------
Operace DLActive vrací hodnotu true.

[TEST04]
Otestujeme funkci DLLast.
~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	2
 	1
 	3
 	4	 <= toto je aktivní prvek 
-----------------
Operace DLActive vrací hodnotu true.

[TEST05]
Test funkce DLCopy pøi aktivitì na posledním prvku
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operace DLCopy vrací obsah 4.

[TEST06]
Test funkce DLPred -- voláme 3x, aktivita zùstane na prvním prvku.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	2
 	1
 	3	 <= toto je aktivní prvek 
 	4
-----------------
-----------------
 	2
 	1	 <= toto je aktivní prvek 
 	3
 	4
-----------------
-----------------
 	2	 <= toto je aktivní prvek 
 	1
 	3
 	4
-----------------
Operace DLActive vrací hodnotu true.

[TEST07]
Aktualizujeme obsah aktivního prvku.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5	 <= toto je aktivní prvek 
 	1
 	3
 	4
-----------------
Operace DLActive vrací hodnotu true.
Operace DLCopy vrací obsah 5.

[TEST08]
Test funkce DLSucc -- voláme 3x, aktivita zùstane na posledním prvku.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5
 	1	 <= toto je aktivní prvek 
 	3
 	4
-----------------
-----------------
 	5
 	1
 	3	 <= toto je aktivní prvek 
 	4
-----------------
-----------------
 	5
 	1
 	3
 	4	 <= toto je aktivní prvek 
-----------------
Operace DLActive vrací hodnotu true.

[TEST09]
Provedeme je¹tì jednou DLSucc - aktivita se ztratí.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5
 	1
 	3
 	4
-----------------
Operace DLActive vrací hodnotu false.

[TEST10]
Nastavíme aktivitu na zaèátek a pak ji zru¹íme operací DLPred.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5	 <= toto je aktivní prvek 
 	1
 	3
 	4
-----------------
-----------------
 	5
 	1
 	3
 	4
-----------------
Operace DLActive vrací hodnotu false.

[TEST11]
Pokus o DLCopy pøi neaktivním seznamu => o¹etøená chyba.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*ERROR* The program has performed an illegal operation.
Operace DLCopy volala funkci DLError.

[TEST12]
Pou¾ití operace DLCopyFirst pøi neaktivním seznamu
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operace DLCopyFirst vrací obsah 5.

[TEST13]
Pou¾ití operace DLCopyLast pøi neaktivním seznamu
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operace DLCopyLast vrací obsah 4.

[TEST14]
Pou¾ití operace DLDeleteFirst pøi neaktivním seznamu
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
 	3
 	4
-----------------
Operace DLActive vrací hodnotu false.

[TEST15]
Pou¾ití operace DLDeleteLast pøi neaktivním seznamu
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
 	3
-----------------
Operace DLActive vrací hodnotu false.

[TEST16]
Zkusíme DLPostDelete pøi aktivitì na posledním prvku.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
 	3	 <= toto je aktivní prvek 
-----------------
-----------------
 	1
 	3	 <= toto je aktivní prvek 
-----------------
Operace DLActive vrací hodnotu true.

[TEST17]
Operace DLPreDelete nyní sma¾e první prvek.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	3	 <= toto je aktivní prvek 
-----------------
Operace DLActive vrací hodnotu true.

[TEST18]
Seznam nakonec zru¹íme.
~~~~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------
Operace DLActive vrací hodnotu false.

----------------------- konec pøíkladu c206 -------------------------
